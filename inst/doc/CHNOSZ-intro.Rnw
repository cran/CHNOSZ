%% LyX 1.6.7 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass[english]{article}
\usepackage{ae,aecompl}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage[letterpaper]{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\usepackage{babel}

\usepackage{textcomp}
\usepackage{amsbsy}
\usepackage{graphicx}
\usepackage[numbers]{natbib}
\usepackage[unicode=true, 
 bookmarks=true,bookmarksnumbered=false,bookmarksopen=false,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{pdftitle={Getting started with CHNOSZ},
 pdfauthor={Jeffrey M. Dick}}

\makeatletter
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Textclass specific LaTeX commands.
\usepackage{Sweave}
\newenvironment{wrapsweave}{\par}{\par}
\newenvironment{lyxcode}
{\par\begin{list}{}{
\setlength{\rightmargin}{\leftmargin}
\setlength{\listparindent}{0pt}% needed for AMS classes
\raggedright
\setlength{\itemsep}{0pt}
\setlength{\parsep}{0pt}
\normalfont\ttfamily}%
 \item[]}
{\end{list}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
%\VignetteIndexEntry{1. Getting started with CHNOSZ}

\makeatother

\begin{document}

\title{Getting started with CHNOSZ}


\author{Jeffrey M. Dick}
\maketitle
\begin{wrapsweave}
<<echo=FALSE>>=
options(width=90)
@
\end{wrapsweave}

\section{Introduction}

This document will orient you to the basic functionality of \href{http://www.chnosz.net}{CHNOSZ},
a package for the R software environment. R is a powerful language
and also very fun to use. Don't worry if you're new to it; just plow
through the examples below and you'll start to get the hang of it.
If you want a more structured approach to learning the language, there
are some excellent guides in the Manuals section of the \href{http://www.r-project.org}{R Project page}.
You may also want to refer to a publication on CHNOSZ itself \citep{Dic08}.

The package was developed starting in 2003 to support a research project
on the thermodynamic properties of proteins. Since that time, the
functions in the package have expanded to include calculation of the
thermodynamic properties of reactions, and especially the construction
of chemical activity diagrams for both inorganic and organic systems.
The development of the package since 2009 has focused on the calculation
of the metastable equilibrium relative abundances of large numbers
of proteins with applications in interpretation of metagenomic data
and protein expression profiles.

Although I use the package primarily to model the relative stabilities
of proteins in cells and in hydrothermal systems, the database and
functions are flexible in their use. As you will see below, examples
taken from low-temperature geochemistry are used to demonstrate, and
indeed test, the package.


\section{Outline of workflow}

CHNOSZ is made up of a set of functions and supporting datasets. The
major components of the package are shown in the figure below, which
is a modified version of the flowchart shown in Ref. \citep{Dic08}
(boxes -- functions; ellipses -- datasets).

\includegraphics[width=0.8\columnwidth]{chnosz_new}

Some common usage scenarios are:
\begin{itemize}
\item using \texttt{info()} to search for species in the thermodynamic database
\item using \texttt{subcrt()} to calculate the thermodynamic properties
of species and reactions
\item using the sequence \texttt{basis()}, \texttt{species()}, \texttt{affinity()},
\texttt{diagram()} to assign the basis species that define the dimensions
of chemical composition in a system, define the species of interest
for relative stability calculations, calculate the affinities of formation
reactions of the species of interest under reference (non-equilibrium)
conditions, and to transform the non-equilibrium affinities to equilibrium
chemical activities and plot the results.
\item using \texttt{revisit()} to calculate/plot statistics of the chemical
activities of the species of interest and \texttt{findit()} to search
for combinations of activities of basis species, temperature and/or
pressure that optimize those statistics. (These features, appearing
in version 0.9-3 of the package, are not covered in this document.)
\end{itemize}
The functions are designed with an interactive setting in mind; you
can make good use of CHNOSZ without having to write your own scripts.
The examples in this vignette are meant to portray a simple interactive
session. However, as you become more familiar with CHNOSZ and R, you
will probably find it helpful to save sequences of function calls
that produce interesting results. The results can then be reproduced
on demand by yourself or others with whom you might share your scripts.


\section{Installing and loading CHNOSZ}

If you have just installed R, and you are online, installing the CHNOSZ
package should be as simple as selecting {}``Install packages from
CRAN'' or similar menu item in the R GUI or using the following command
to start the package installation process. (If you are not online,
you instead have to tell R to install the package from a local package
file.)
\begin{wrapsweave}
<<install_CHNOSZ,eval=FALSE>>=
install.packages("CHNOSZ")
@
\end{wrapsweave}
Then load the CHNOSZ package to make its functions and data available
in your working session.
\begin{wrapsweave}
<<library_CHNOSZ>>=
library(CHNOSZ)
@

<<thermo_opt_online,echo=FALSE>>=
thermo$opt$online <- TRUE
@
\end{wrapsweave}
The rest of this document assumes that the CHNOSZ package is loaded.


\section{Thermodynamic database}


\subsection{\texttt{info()} part I}

So you want to know what are the standard molal thermodynamic properties
and equations of state parameters of aqueous ethylene? Look no further
than the \texttt{info()} function, which provides a convenient interface
to retrieve entries from the thermodynamic database packaged with
CHNOSZ.
\begin{wrapsweave}
<<info_ethylene>>=
info("ethylene")
@
\end{wrapsweave}
There are two species named {}``ethylene'' in the database. Normally,
\texttt{info()} gives preference to aqueous species if they exist,
so in this case we find that aqueous ethylene is species number 88
in the database. Let's display this entry, now by giving the numeric
value to the function.
\begin{wrapsweave}
<<info_88>>=
info(88)
@
\end{wrapsweave}
If you were instead interested in the properties of the gas, you could
run:
\begin{wrapsweave}
<<info_ethylene_gas>>=
info("ethylene","gas")
@
\end{wrapsweave}
\texttt{info()} itself is used by other functions in the package.
It prints output to the screen, but also returns a numeric value if
it finds a species matching the search term. So, we can retrieve the
properties of aqueous acetic acid without having to futz with the
species ID number.
\begin{wrapsweave}
<<info_acetic>>=
aadata <- info(info("acetic acid"))
print(aadata)
@
\end{wrapsweave}



\subsection{\texttt{thermo\$source}}

All the thermodynamic and other data, as well as system definitions
provided by the user in an interactive session, are stored in an object
called \texttt{thermo}.
\begin{wrapsweave}
<<summary_thermo>>=
summary(thermo)
@
\end{wrapsweave}
The thermodynamic database is stored in a dataframe (an R object that
is basically a two-dimensional matrix with named columns) called \texttt{thermo\$obigt},
and the literature sources of thermodynamic data are listed in \texttt{thermo\$source}.
Most (all?) of the authors who are responsible for these data would
be highly grateful if you cite them whenever these data are used in
publications.
\begin{wrapsweave}
<<thermo_source>>=
ts <- thermo$source
ts[ts$source==aadata$source1,]
@
\end{wrapsweave}



\subsection{\texttt{info()} part II}

Want to know what acids are in the database?
\begin{wrapsweave}
<<info_acid>>=
info("acid")
@
\end{wrapsweave}
That's right, if \texttt{info()} can't find an exact match to a name,
it does a fuzzy search. That's why {}``uracil'' and {}``metacinnabar''
show up above. If you really just want species whose names include
the term {}``acid'', you can add a placeholder character to narrow
the search. (Note: don't use an underscore ({}``\_'') here because
that character is reserved for names of proteins. Any other character
will do; here we use a space.)
\begin{wrapsweave}
<<info_spaceacid>>=
info(" acid")
@
\end{wrapsweave}
The names of species other than proteins use (almost) exclusively
lowercase letters. \texttt{info()} can also be used to search the
text of the chemical formulas as they are entered in the database;
the symbols for the elements always start with a capital letter. The
example below lists the formulas of aqueous species, then minerals,
that contain the symbol commonly used to represent the hydroxide group.
\begin{wrapsweave}
<<info_OH>>=
info("(OH)")
@
\end{wrapsweave}



\section{Proteins}


\subsection{\texttt{protein()}}

There are few things more fun than calculating the standard molal
Gibbs energy of formation from the elements at 25 $^{\circ}$C and
1 bar of a protein using group additivity. And there are few proteins
whose thermodynamic properties more well studied than lysozyme from
the egg of the chicken.
\begin{wrapsweave}
<<protein_LYSC>>=
protein("LYSC_CHICK")
protein(6)
@
\end{wrapsweave}
What happened there? Well, the first line extracted the row (rownumber
6) of \texttt{thermo\$protein} that contains the amino acid composition
of LYSC\_CHICK. The second line used group additivity \citep{DLH06}
to calculate the standard molal thermodynamic properties and equations
of state parameters of the protein.


\subsection{\texttt{info()}}

Most of the time you probably won't be using the \texttt{protein()}
function. That's because \texttt{info()} recognizes the underscore
character as being an essential part of the name of a protein. This
naming convention is consistent with the \href{http://www.expasy.org}{Swiss-Prot/UniProtKB}
naming conventions.
\begin{wrapsweave}
<<info_LYSC>>=
info("LYSC_CHICK")
info(2812)
@
\end{wrapsweave}
When CHNOSZ is first loaded, the thermodynamic properties and parameters
of the proteins are not present in \texttt{thermo\$obigt}. In fact,
the first call to\texttt{ info()} just above had a side effect of
adding the computed properties and parameters to \texttt{thermo\$obigt}.


\section{Reaction properties}


\subsection{A single species}

A major feature of CHNOSZ is the ability to calculate standard molal
properties of species and reactions as a function of temperature and
pressure. The function used is called \texttt{subcrt()}, which takes
its name (with modification) from the well known SUPCRT package \citep{JOH92}.
\texttt{subcrt()}, like \texttt{info()}, takes the name of a species
(including proteins) as its first argument (it also works if you give
it the numeric index of the species in the database). If no reaction
coefficients are given, the function calculates the standard molal
properties of the indicated species.
\begin{wrapsweave}
<<subcrt_water>>=
subcrt("water")
@
\end{wrapsweave}
The columns in the output are temperature ($^{\circ}$C), pressure
(bar), density of water (g cm$^{-3}$), logarithm of the equilibrium
constant (only meaningful for reactions; see below), and standard
molal Gibbs energy and enthalpy of formation from the elements (cal
mol$^{-1}$), and standard molal entropy (cal K$^{-1}$ mol$^{-1}$),
volume (cm$^{3}$ mol$^{-1}$) and heat capacity (cal K$^{-1}$ mol$^{-1}$). 

Compared to other species available in CHNOSZ, liquid $\mathrm{H_{2}O}$
is a weird one, and actually has a dedicated function for calculating
its properties. By default, this function calls a Fortran subroutine
taken from SUPCRT. Use \texttt{help(water)} for more information.


\subsection{A reaction}

To calculate the properties of a reaction, enter the reaction coefficients
as a second argument to \texttt{subcrt()}. The function also allows
the specification of temperature.
\begin{wrapsweave}
<<subcrt_C2H5OH>>=
subcrt(c("C2H5OH","O2","CO2","H2O"),c(-1,-3,2,3),T=37)
@
\end{wrapsweave}
For historical reasons (i.e., the prevalence of the use of oxygen
fugacity in geochemical calculations \citep{And05}), $\mathrm{O_{2}}$
breaks the general rule in CHNOSZ that species whose states are not
specified are given the aqueous designation if it is available in
the thermodynamic database. If you want to specify the physical states
of the species in the reaction, that's possible too. For example,
we can ensure that dissolved $\mathrm{O_{2}}$ is used in the calculation
instead of the gaseous form. 
\begin{wrapsweave}
<<subcrt_C2H5OH_T37>>=
subcrt(c("C2H5OH","O2","CO2","H2O"),c(-1,-3,2,3),c("liq","aq","aq","liq"),T=37)
@
\end{wrapsweave}
A useful feature of \texttt{subcrt()} is that it emits a warning if
the reaction is not balanced. Let's say you forgot to account for
oxygen on the left-hand side of the reaction (similar to the reaction
found at the \href{http://en.wikipedia.org/wiki/Ethanol_metabolism}{Wikipedia entry on ethanol metabolism}
on 2010-09-23: {}``Complete Reaction: C$_{2}$H$_{6}$O(Ethanol)\textrightarrow{}C$_{2}$H$_{4}$O(Acetaldehyde)\textrightarrow{}C$_{2}$H$_{4}$O$_{2}$(acetic
Acid) \textrightarrow{}Acetyl-CoA\textrightarrow{}3H$_{2}$O+2CO$_{2}$'').
\begin{wrapsweave}
<<subcrt_C2H5OH_unbal>>=
subcrt(c("C2H5OH","CO2","H2O"),c(-1,2,3),T=37)
@
\end{wrapsweave}
In the next section we'll see how to use another feature of CHNOSZ
to automatically balance reactions.


\section{Basis species}


\subsection{What are basis species?}

\textbf{Basis species} are a minimal set of chemical species that
represent the compositional variation in a system. system Operationally,
a \textbf{system} is the combination of basis species and species
of interest which is set up by the user to investigate a real-life
system. The basis species are akin to thermodynamic components, but
can include charged species. 

There are at least two reasons to define the basis species when using
CHNOSZ. First, you might want to use them to automatically balance
reactions. Second, they are required for making chemical activity
diagrams. Let's start with an example that \emph{doesn't} work.
\begin{wrapsweave}
<<basis_not,eval=FALSE>>=
basis(c("CO2","H2O","NH3","H2S","H+"))
@
\end{wrapsweave}
~
\begin{lyxcode}
Error~in~put.basis(basis,~mystates)~:~

~~this~is~not~a~valid~stoichiometric~matrix.

In~addition:~Warning~messages:

1:~basis:~5~compounds~(~CO2~H2O~NH3~H2S~H+~)~

2:~basis:~6~elements~(~C~H~N~O~S~Z~)~
\end{lyxcode}
CHNOSZ requires that there be one basis species for each different
element, and charge if present. Why? So that any possible species
of interest that contains these elements can be represented by a linear
combination of the basis species. Now let's make a working basis definition.
\begin{wrapsweave}
<<basis>>=
basis(c("CO2","H2O","NH3","O2","H2S","H+"))
@
\end{wrapsweave}
Awesome. First basis definition! Note the column names, which give
CHNOSZ its name. These represent the major elements in the common
amino acids, together with Z, which stands for charge.


\subsection{Auto-balancing a reaction}

Now that the basis species are defined, try the unbalanced reaction
again.
\begin{wrapsweave}
<<subcrt_C2H5OH_auto>>=
subcrt(c("C2H5OH","CO2","H2O"),c(-1,2,3),T=37)
@
\end{wrapsweave}
Cool! \texttt{subcrt()} detected an unbalanced reaction, but since
the missing element was among the elements of the basis species, it
added the appropriate amount of $\mathrm{O_{2}}_{\left(gas\right)}$
to the reaction before running the calculations. You can go even further
and eliminate $\mathrm{CO_{2}}$ and $\mathrm{H_{2}O}$ from the function
call, but still get the same results.
\begin{wrapsweave}
<<subcrt_C2H5OH>>=
subcrt(c("C2H5OH"),c(-1),T=37)
@
\end{wrapsweave}
What if you were interested in the thermodynamic properties of the
reaction of ethanol to acetaldehyde, but didn't want to balance the
reaction yourself (and you also didn't know how the formulas of the
species are written in the database)?
\begin{wrapsweave}
<<subcrt_ethanol>>=
subcrt(c("ethanol","acetaldehyde"),c(-1,1),T=37)
@
\end{wrapsweave}
Notice how 2 H's needed to be added to the right-hand side of the
reaction, which is the equivalent of $\mathrm{H_{2}O}-0.5\mathrm{O_{2}}$.
With a different choice of basis species, but the same elements, the
reaction might look quite different. As an extreme example, suppose
you had amino acids in mind. The first line below, \texttt{data(thermo)},
is a quick way to reset the thermo object to its original state, in
other words to forget the current system definition.
\begin{wrapsweave}
<<subcrt_acetaldehyde>>=
data(thermo)
basis(c("glycine","alanine","lysine","glutamic acid","cysteine","H+"))
subcrt(c("ethanol","acetaldehyde"),c(-1,1),T=37)
@
\end{wrapsweave}
In this case, the function finds that 2 H's are the equivalent of
$-2\mathrm{C_{2}H_{5}NO_{2}}+5\mathrm{C_{3}H_{7}NO_{2}}-\mathrm{C_{6}H_{14}N_{2}O_{2}}-\mathrm{C_{5}H_{9}NO_{4}}$.
It's pretty easy for the computer to figure that out using basic matrix
operations, but not likely something you'd want to do by hand. You
might complain that this reaction is not likely to represent an actual
metabolic process ... as always, the challenge (and fun) of coming
up with a useful basis definition is in relating them to observable
quantities.


\subsection{It works for proteins too!}

As noted above, \texttt{subcrt()} can take the name of a protein as
an argument. 
\begin{wrapsweave}
<<subcrt_LYSC>>=
data(thermo)
basis("CHNOS+")
subcrt("LYSC_CHICK",1,T=25)
@
\end{wrapsweave}
The reaction properties for proteins are quite large compared to the
reactions with ethanol. If the name of the protein is not found in
CHNOSZ's own database, the protein sequence can be retrieved from
the Swiss-Prot database (if the computer is connected to the internet)
\begin{wrapsweave}
<<subcrt_ALAT1,eval=FALSE>>=
subcrt("ALAT1_HUMAN",1,T=25)
@
\end{wrapsweave}
For the basis definition we used a keyword that refers to a preset
combination of commonly used basis species. Note that this also sets
the logarithms of activities (fugacity in the case of $\mathrm{O_{2}}_{\left(g\right)}$)
to reference values. While these values do not affect the results
of the \texttt{subcrt()} calculation (which normally returns only
the standard molal properties of the reaction), they are essential
in calculating the relative stabilities of the species of interest.


\section{Activity diagrams}


\subsection{Quick example: stability diagram for proteins}

Now we're going to get into the heart of CHNOSZ: the \texttt{affinity()}
function. First we start by defining the basis species.
\begin{wrapsweave}
<<>>=
basis("CHNOS+")
@
\end{wrapsweave}
Then we define the \textbf{species of interest}, i.e. those whose
relative stabilities we wish to calculate. We will use part of a case
study presented in Ref. \citep{Dic08}. \emph{Methanocaldococcus jannaschii}
is a hyperthermophilic methanogen known to live at higher temperatures
than \emph{Methanococcus voltae} (also a methanogen) and \emph{Haloarcula
japonica }(a halophile). These archaeal organisms produce cell-surface
glycoproteins (a.k.a. surface-layer proteins).
\begin{wrapsweave}
<<>>=
species(c("CSG_METJA","CSG_METVO","CSG_HALJP"))
@
\end{wrapsweave}
Note the output: the matrix denotes the coefficients of each of the
basis species in the formation reaction for one mole of each of the
species of interest. The \textbf{formation reaction} is the chemical
reaction to form (as a product) one mole of a species of interest
from a combination of basis species (as reactants and/or products,
depending on the stoichiometry). The species definition also includes
reference values for the chemical activities of the species of interest. 

Now we are all set up to calculate the chemical affinities of the
formation reactions. The chemical affinity is the negative of the
Gibbs energy change per unit of reaction progress of a reaction; it
is calculated in CHNOSZ using $\boldsymbol{A}=2.303RT\log(K/Q)$ ($R$
-- gas constant, $T$ -- temperature, $K$ -- equilibrium constant,
$Q$ -- activity product).

\texttt{affinity()} is a versatile function that accepts any number
of arguments describing the range of chemical conditions we're interested
in. Here, we choose to vary the logarithm of the fugacity of oxygen
from $-90$ to $-65$. The chemical activities of the other basis
species are taken to be constants equal to the values shown above
after the call to \texttt{basis()}.
\begin{wrapsweave}
<<>>=
a <- affinity(O2=c(-80,-65))
@
\end{wrapsweave}
Finally, we can use \texttt{diagram()} to plot the relative stabilities
of the proteins in the system. We'll also specify where the legend
should be placed on the plot.
\begin{wrapsweave}
<<CSG_diagram,fig=T,width=4,height=3>>=
diagram(a,legend.x="bottomleft")
@
\end{wrapsweave}
Notably, the protein from the hyperthermophilic organism is relatively
stable at lower oxidation states.


\subsection{Why does this work?}

Here is a partial explanation: You use \texttt{affinity()} to calculate
the chemical affinities of the formation reactions of the proteins,
taking into account chemical activities of the proteins that are set
to reference, non-equilibrium values. Then, the \texttt{diagram()}
function transforms these non-equilibrium affinities into chemical
activities of the proteins at metastable equilibrium (this is actually
achieved using the Maxwell-Boltzmann distribution). These activities
satisfy the conditions that 1) the total activity of a conserved component
(for proteins, this is usually the protein backbone group) is constant
and 2) the chemical affinities of the formation reactions are all
equal (but not zero).


\subsection{More proteins, more dimensions}

Let's get more proteins into the act.
\begin{wrapsweave}
<<PredominanceDiagram,fig=T,width=4,height=3>>=
species(c("CSG_METSC","CSG_METFE","CSG_METBU"))
species(c("SLAP_ACEKI","SLAP_BACST","SLAP_BACLI","SLAP_AERSA"))
a <- affinity(O2=c(-90,-70),H2O=c(-15,0))
diagram(a)
@
\end{wrapsweave}
Stability fields for proteins as a function of two chemical activities!
This example hints at the multidimensional nature of the stability
problem. By carefully choosing a system for consideration, this type
of analysis might be useful in relating the occurrence of proteins
and organisms to environmental characteristics. (If you don't like
the colors used in the plot, don't worry... the colors can be changed
by using additional options to \texttt{diagram()}.)


\subsection{A mineral example}

This example is modeled after a figure on p. 246 of Bowers et al.,
1984 \citep{BJH84} for the system HCl-H2O-CaO-CO2-MgO-(SiO2) at 300
$^{\circ}$C and 1000 bar.
\begin{wrapsweave}
<<Bowers,fig=T,width=4,height=3>>=
basis(c("HCl","H2O","Ca+2","CO2","Mg+2","SiO2","O2","H+"),
  c(999,0,999,999,999,999,999,-7))
species(c("quartz","talc","forsterite","tremolite","diopside",
  "wollastonite","monticellite","merwinite"))
a <- affinity("Mg+2"=c(-12,-4),"Ca+2"=c(-8,0),T=300,P=1000)
diagram(a)
@
\end{wrapsweave}
There are several particulars to note about the commands. The 999's
in the assignment of logarithms of activities of basis species indicate
that these values do not affect the outcome of the calculation. This
is so because 1) HCl, CO2, O2 have zero stoichiometric coeffs in the
species, 2) Ca+2, Mg+2 are variables of interest (and their ranges
are taken from the call to \texttt{affinity()}), and 3) SiO2 is the
conserved (immobile) component. Also note that {}``Mg+2'' and {}``Ca+2''
are not syntactically valid object names, but we can force R to deal
with them by putting them in quotation marks in the call to \texttt{affinity()}.
The calculation is slightly different from that used in Ref. \citep{BJH84},
where the axes are $\log\left(a_{\mathrm{Mg^{+2}}}/a_{\mathrm{H^{+}}}^{2}\right)$
and $\log\left(a_{\mathrm{Ca^{+2}}}/a_{\mathrm{H^{+}}}^{2}\right)$.

In just a few lines it's possible to make a wide variety of activity
diagrams for organic and inorganic species. Try it with your favorite
system!


\section{Where to go from here}

You can explore the package documentation through R's help system;
just type \texttt{help.start()} at the command line and select CHNOSZ
in the browser window that comes up. If you want to get an idea of
the types of calculations available in CHNOSZ, run the examples in
the help files, for example \texttt{diagram()}. (For the purposes
of this document, the output of the code below is not shown here.)
\begin{wrapsweave}
<<example_diagram,eval=FALSE>>=
example(diagram)
@
\end{wrapsweave}
Or you can use the following to run all of the examples provided in
the documentation for the package. You will see a lot of text fly
by on the screen, as well as a variety of plots. The examples will
take about 10-20 minutes to run, depending on your machine. 
\begin{wrapsweave}
<<examples,eval=FALSE>>=
examples()
@
\end{wrapsweave}
If you want to modify the database, first find the location of the
data files:
\begin{wrapsweave}
<<system.file>>=
system.file(package="CHNOSZ")
@
\end{wrapsweave}
The result will be different on your system. In the \texttt{data}
directory at that location are comma-separated-value (CSV) files;
the one named OBIGT.csv is the primary thermodynamic database. After
modifying it, save the file and restart CHNOSZ and your modifications
will be visible.

Have fun!


\section{Document information}

Revision history:
\begin{itemize}
\item 2010-09-30 Initial version
\end{itemize}
R session information:
\begin{wrapsweave}
<<session_info>>=

sessionInfo()

@
\end{wrapsweave}


\bibliographystyle{plainnat}
\bibliography{vig}

\end{document}
